.triller-brand {
    font-family: 'Arial', sans-serif; /* Replace 'Arial' with the desired font name */
  }
  
  
  * {
    box-sizing: border-box;
  }
  body {
    background-color: #090A0E;
    color: #ffffff;
  }
  
  .triller-center-max-size {
    max-width: 1020px;
    margin: 0 auto;
    padding: 0 15px;
  }
  
  .triller-header {
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 15px;
    text-transform: uppercase;
  }
  
  .triller-poster {
    background-size: cover;
    background-position: top center;
    min-height: 600px;
    display: flex;
    align-items: flex-end;
    padding-bottom: 50px;
    position: relative;
  }
  
  /* ...Tambahkan prefiks 'triller-' di depan kelas CSS yang lain... */
  Setelah mengubah nama kelas CSS, pastikan juga mengubah referensi kelas CSS yang terkait di file Triller.js. Misalnya, ganti className="brand" dengan className="triller-brand", dan seterusnya untuk elemen-elemen lainnya yang menggunakan kelas CSS dari app.css.
  
  Dengan melakukan ini, Anda memastikan bahwa kelas CSS yang digunakan dalam komponen Triller tidak akan bertabrakan dengan kelas CSS dari komponen lain dalam aplikasi Anda.
  
  
  
  
  
  User
  reactnya ubah juga classnamenya
  ChatGPT
  Untuk mengubah kelas CSS pada elemen-elemen React di komponen Triller, Anda perlu memperbarui properti className pada masing-masing elemen tersebut. Berikut adalah contoh penggunaan kelas CSS yang telah diperbarui dalam komponen Triller:
  
  jsx
  Copy code
  import { useEffect, useState } from "react";
  import '../style/app.css';
  import axios from 'axios';
  import Movie from "./movie";
  import Youtube from "react-youtube";
  
  function Triller() {
    const MOVIE_API = "https://api.themoviedb.org/3/";
    const SEARCH_API = MOVIE_API + "search/movie";
    const DISCOVER_API = MOVIE_API + "discover/movie";
    const API_KEY = "ecb4693acabff45ab8dd3456c2d62d31";
    const BACKDROP_PATH = "https://image.tmdb.org/t/p/w1280";
  
    const [playing, setPlaying] = useState(false);
    const [triller, setTriller] = useState(null);
    const [movies, setMovies] = useState([]);
    const [searchKey, setSearchKey] = useState("");
    const [movie, setMovie] = useState({ title: "Loading Movies" });
  
    useEffect(() => {
      fetchMovies();
    }, []);
  
    const fetchMovies = async (event) => {
      if (event) {
        event.preventDefault();
      }
  
      const { data } = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {
        params: {
          api_key: API_KEY,
          query: searchKey
        }
      });
  
      console.log(data.results[0]);
      setMovies(data.results);
      setMovie(data.results[0]);
  
      if (data.results.length) {
        await fetchMovie(data.results[0].id);
      }
    };
  
    const fetchMovie = async (id) => {
      const { data } = await axios.get(`${MOVIE_API}movie/${id}`, {
        params: {
          api_key: API_KEY,
          append_to_response: "videos"
        }
      });
  
      if (data.videos && data.videos.results) {
        const triller = data.videos.results.find(vid => vid.name === "Official Trailer");
        setTriller(triller ? triller : data.videos.results[0]);
      }
  
      setMovie(data);
    };
  
    const selectMovie = (movie) => {
      fetchMovie(movie.id);
      setPlaying(false);
      setMovie(movie);
      window.scrollTo(0, 0);
    };
  
    const renderMovies = () => (
      movies.map(movie => (
        <Movie
          selectMovie={selectMovie}
          key={movie.id}
          movie={movie}
        />
      ))
    );
  
    return (
      <div className="triller-app">
        <header className="triller-header">
          <span className="triller-brand">d<b>MOVIE</b></span>
          <form className="triller-form" onSubmit={fetchMovies}>
            <input className="triller-search" type="text" id="search" onInput={(event) => setSearchKey(event.target.value)} />
            <button className="triller-submit-search" type="submit"><i className="fa fa-search"></i></button>
          </form>
        </header>
        {movies.length ?
          <main>
            {movie ?
              <div className="triller-poster" style={{ backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})` }}>
                {playing ?
                  <>
                    <Youtube
                      videoId={triller.key}
                      className="triller-youtube"
                      containerClassName="triller-youtube-container"
                      opts={{
                        width: "490%", // Increase the width of the video
                        height: "600px", // Increase the height of the video
                        playerVars: {
                          autoplay: 1,
                          controls: 0,
                          cc_load_policy: 0,
                          fs: 0,
                          iv_load_policy: 0,
                          modestbranding: 0,
                          rel: 0,
                          showinfo: 0
                        }
                      }}
                    />
                    <button onClick={() => setPlaying(false)} className="triller-button close-video">Close</button>
                  </> :
                  <div className="triller-center-max-size">
                    <div className="triller-poster-content">
                      {triller ?
                        <button className="triller-button play-video" onClick={() => setPlaying(true)} type="button">Play Trailer</button>
                        : 'Sorry, no trailer available'}
                      <h1>{movie.title}</h1>
                      <p>{movie.overview}</p>
                    </div>
                  </div>
                }
              </div>
              : null}
  
            <div className="triller-center-max-size triller-container">
              {renderMovies()}
            </div>
          </main>
          : 'Sorry, no movies found'}
      </div>
    );
  }
  
  export default Triller;
  Dalam contoh di atas, kelas CSS pada elemen-elemen dalam komponen Triller telah diperbarui sesuai dengan perubahan yang dilakukan pada file app.css. Pastikan kelas CSS yang digunakan di komponen tersebut sesuai dengan kelas yang didefinisikan dalam file CSS.
  
  
  
  
  
  
  
  
  .poster {
    background-size: cover;
    background-position: top center;
    min-height: 600px;
    display: flex;
    align-items: flex-end;
    padding-bottom: 50px;
    position: relative;
  }
  
  .poster-content {
    width: 80%;
  }
  
  h1 {
    font-size: 92px;
    margin-top: 0;
    line-height: 1;
    margin-bottom: 10px;
  }
  
  .container {
    background-color: #0F1014;
    padding-top: 80px;
    padding-bottom: 80px;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 30px;
  }
  
  
  .button {
    margin: 20px 0;
    background: #0F1014;
    color: white;
    border: none;
    outline: none;
    padding: 10px 15px;
    cursor: pointer;
    transition: box-shadow 0.2s;
    text-transform: uppercase;
    letter-spacing: 2px;
    border: 1px solid gray;
  }
  
  .button:hover {
    box-shadow: 0 5px 5px rgba(0,0,0,0.5);
  }
  
  .close-video {
    position: absolute;
    z-index: 2;
    bottom: 10px;
    left: 10px;
  }
  
  .youtube-container {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
  }
  
  .brand {
    font-weight: bold;
  }
  
  /*-- MOVIE */
  
  .movie {
    position: relative;
    cursor: pointer;
    text-align: left;
    font-size: 16px;
  }
  
  .movie img {
    height: 355px;
    max-width: 100%;
  }
  
  .movie-infos {
    padding: 15px 0;
  }
  
  .movie-title {
    margin: 0;
  }
  
  .movie-voting {
    position: absolute;
    right: 5px;
    top: 5px;
    background-color: #0F1014;
    border: 1px solid gray;
    padding: 10px;
    font-size: 12px;
    border-radius: 25px;
  }
  
  /** SEARCH **/
  .form {
    position: relative;
  }
  
  .search {
    border: 1px solid darkslategray;
    outline: transparent;
    background-color: transparent;
    padding: 5px 10px;
    border-radius: 25px;
    color: white;
  
  }
  
  .submit-search {
    position: absolute;
    right: 5px;
    top: 5px;
    background-color: transparent;
    color:  white;
    border: none;
    cursor: pointer;
  }